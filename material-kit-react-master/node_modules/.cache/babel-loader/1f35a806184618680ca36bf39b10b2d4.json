{"ast":null,"code":"import _defineProperty from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nexport default function RequestList(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tableData = _React$useState2[0],\n      setTableData = _React$useState2[1];\n\n  useEffect(function () {\n    if (props.data != []) {\n      console.log(props.data);\n      setTableData(props.data);\n    }\n  }, [props]);\n  return React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 35,\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"DEP\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(ReactTable, {\n    className: \"-striped -highlight h-full sm:rounded-16 overflow-hidden \",\n    getTrProps: function getTrProps(state, rowInfo, column) {\n      return {\n        className: \"cursor-pointer\",\n        onClick: function onClick(e, handleOriginal) {\n          if (rowInfo) {// dispatch(Actions.openEditContactDialog(rowInfo.original));\n          }\n        }\n      };\n    },\n    data: tableData ? tableData : [],\n    columns: [_defineProperty({\n      Header: \"Sl No\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"sno\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Entry No\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"entry_no\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Name\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"name\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Enrolment Type\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"enrol_type\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"CGPA\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"grade\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Department\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"dept\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Specialisation\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"extra\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Credits Completed\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"credits_completed\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Status\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"status\"\n    }, \"className\", \"justify-center\"), {\n      Header: function Header() {\n        return React.createElement(Checkbox, {\n          onClick: function onClick(event) {\n            event.stopPropagation();\n          },\n          onChange: function onChange(event) {// event.target.checked ? dispatch(Actions.selectAllContacts()) : dispatch(Actions.deSelectAllContacts());\n          } // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n          // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        });\n      },\n      accessor: \"\",\n      Cell: function Cell(row) {\n        return React.createElement(Checkbox, {\n          onClick: function onClick(event) {\n            event.stopPropagation();\n          } // checked={selectedContactIds.includes(row.value.id)}\n          // onChange={() => dispatch(Actions.toggleInSelectedContacts(row.value.id))}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      },\n      className: \"justify-center\",\n      sortable: false,\n      width: 64\n    }],\n    defaultPageSize: 10,\n    noDataText: \"No Requests found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js"],"names":["React","useEffect","useState","Avatar","Button","Checkbox","Container","Icon","IconButton","Paper","Typography","FuseUtils","FuseAnimate","useDispatch","useSelector","ReactTable","Grid","ArrowBackIcon","RequestList","props","tableData","setTableData","data","console","log","textAlign","fontSize","color","state","rowInfo","column","className","onClick","e","handleOriginal","Header","filterable","sortable","accessor","event","stopPropagation","Cell","row","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n\nexport default function RequestList(props) {\n  const [tableData, setTableData] = React.useState(null);\n  useEffect(() => {\n    if (props.data != []) {\n      console.log(props.data);\n      setTableData(props.data);\n    }\n  }, [props]);\n  return (\n    <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n      <Container>\n        <br></br>\n        <Typography style={{ textAlign: \"center\", fontSize: 35, color: \"red\" }}>DEP</Typography>\n        <br></br>\n        <ReactTable\n          className=\"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n          getTrProps={(state, rowInfo, column) => {\n            return {\n              className: \"cursor-pointer\",\n              onClick: (e, handleOriginal) => {\n                if (rowInfo) {\n                  // dispatch(Actions.openEditContactDialog(rowInfo.original));\n                }\n              }\n            }\n          }}\n          data={tableData ? tableData : []}\n          columns={[\n            {\n              Header: \"Sl No\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"sno\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Entry No\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"entry_no\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Name\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"name\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Enrolment Type\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"enrol_type\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"CGPA\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"grade\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Department\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"dept\",\n              className: \"justify-center\",\n\n            },\n\n\n            {\n              Header: \"Specialisation\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"extra\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Credits Completed\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"credits_completed\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Status\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"status\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: () => (\n                <Checkbox\n                  onClick={(event) => {\n                    event.stopPropagation();\n                  }}\n                  onChange={(event) => {\n                    // event.target.checked ? dispatch(Actions.selectAllContacts()) : dispatch(Actions.deSelectAllContacts());\n                  }}\n                // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n                // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n                />\n              ),\n              accessor: \"\",\n              Cell: row => {\n                return (<Checkbox\n                  onClick={(event) => {\n                    event.stopPropagation();\n                  }}\n                // checked={selectedContactIds.includes(row.value.id)}\n                // onChange={() => dispatch(Actions.toggleInSelectedContacts(row.value.id))}\n                />\n                )\n              },\n              className: \"justify-center\",\n              sortable: false,\n              width: 64\n            },\n            // {\n            //     // Header   : () => (\n            //         // selectedContactIds.length > 0 && (\n            //             // <ContactsMultiSelectMenu/>\n            //         // )\n            //     // ),\n            //     accessor : \"avatar\",\n            //     Cell     : row => (\n            //         <Avatar className=\"mr-8\" alt={row.original.name} src={row.value}/>\n            //     ),\n            //     className: \"justify-center\",\n            //     width    : 64,\n            //     sortable : false\n            // },\n\n          ]}\n          defaultPageSize={10}\n          noDataText=\"No Requests found\"\n        /></Container>\n\n    </FuseAnimate>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}