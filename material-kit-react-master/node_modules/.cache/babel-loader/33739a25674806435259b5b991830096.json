{"ast":null,"code":"import _defineProperty from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport axiosInstance from 'app/main/axios';\nexport default function RequestList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      enrollmentList = _useState2[0],\n      setEnrollmentList = _useState2[1];\n\n  var _useState3 = useState(props.enrolIds),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checklist = _useState4[0],\n      setCheckedState = _useState4[1];\n\n  function handleUpdateRequest(message) {\n    console.log(\"This is checklist\", checklist);\n    var elist = [];\n    Object.keys(checklist).forEach(function (key) {\n      // console.log(key, checklist[key]);\n      if (checklist[key] == true) {\n        elist.push(key);\n      }\n    }); // axiosInstance.put('update-request-status/', \n    //   {\n    //   'action':message,\n    //   'enrollments':elist\n    //   }\n    //   ).then((res)=>\n    //     {\n    //     console.log(res);\n    //     }\n    // )\n  }\n\n  var handleChecked = function handleChecked(event) {\n    setCheckedState(_objectSpread({}, checklist, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  return React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 35,\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.courseName), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      color: \"green\"\n    },\n    onClick: function onClick() {\n      return handleUpdateRequest(\"approved\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Approve\"), React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      color: \"red\"\n    },\n    onClick: function onClick() {\n      return handleUpdateRequest(\"rejected\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Reject\"), React.createElement(ReactTable, {\n    className: \"-striped -highlight h-full sm:rounded-16 overflow-hidden \",\n    getTrProps: function getTrProps(state, rowInfo, column) {\n      return {\n        className: \"cursor-pointer\",\n        onClick: function onClick(e, handleOriginal) {\n          if (rowInfo) {// dispatch(Actions.openEditContactDialog(rowInfo.original));\n          }\n        }\n      };\n    },\n    data: props.data,\n    columns: [_defineProperty({\n      Header: \"Sl No\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"sno\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Entry No\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"entry_no\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Name\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"name\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Enrolment Type\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"enrol_type\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"CGPA\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"cgpa\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Department\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"dept\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Specialisation\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"spec\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Credits Completed\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"credits_completed\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Graduation Year\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"graduation\"\n    }, \"className\", \"justify-center\"), _defineProperty({\n      Header: \"Status\",\n      filterable: true,\n      sortable: true,\n      className: \"font-bold\",\n      accessor: \"status\"\n    }, \"className\", \"justify-center\"), {\n      Header: function Header() {\n        return React.createElement(Checkbox // onClick={(event) => {\n        //   event.stopPropagation();\n        // }}\n        // onChange={(event) => {\n        // event.target.checked ? selectAllContacts()) : deSelectAllContacts());\n        // }}\n        // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n        // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n        , {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        });\n      },\n      accessor: \"\",\n      Cell: function Cell(row) {\n        return React.createElement(Checkbox, {\n          name: row.original.enrolmentId,\n          checked: checklist[row.original.enrolmentId],\n          onChange: handleChecked // onClick={(event) => {\n          // event.stopPropagation();\n          // }}\n          // checked={selectedContactIds.includes(row.value.id)}\n          // onChange={() => dispatch(Actions.toggleInSelectedContacts(row.value.id))}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      },\n      className: \"justify-center\",\n      sortable: false,\n      width: 64\n    }],\n    defaultPageSize: 10,\n    noDataText: \"No Requests found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js"],"names":["React","useEffect","useState","Avatar","Button","Checkbox","Container","Icon","IconButton","Paper","Typography","FuseUtils","FuseAnimate","useDispatch","useSelector","ReactTable","Grid","ArrowBackIcon","axiosInstance","RequestList","props","enrollmentList","setEnrollmentList","enrolIds","checklist","setCheckedState","handleUpdateRequest","message","console","log","elist","Object","keys","forEach","key","push","handleChecked","event","target","name","checked","textAlign","fontSize","color","courseName","state","rowInfo","column","className","onClick","e","handleOriginal","data","Header","filterable","sortable","accessor","Cell","row","original","enrolmentId","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport axiosInstance from 'app/main/axios';\n\n\nexport default function RequestList(props) {\n\n  const [enrollmentList , setEnrollmentList] = useState([]);\n  const [checklist , setCheckedState] = useState(props.enrolIds);\n\n\n  function handleUpdateRequest(message){\n\n    console.log(\"This is checklist\",checklist)\n    const elist = []\n    Object.keys(checklist).forEach(function(key) {\n      // console.log(key, checklist[key]);\n      if (checklist[key] == true){\n        elist.push(key);\n      }\n      });\n    // axiosInstance.put('update-request-status/', \n    //   {\n    //   'action':message,\n    //   'enrollments':elist\n    //   }\n    //   ).then((res)=>\n    //     {\n    //     console.log(res);\n        \n    //     }\n    // )\n\n  }\n  const handleChecked = (event) => {\n    setCheckedState({ ...checklist, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n      <Container>\n        <br></br>\n        <Typography style={{ textAlign: \"center\", fontSize: 35, color: \"red\" }}>{props.courseName}</Typography>\n        <br></br>\n        <Button variant=\"outlined\" style={{color:\"green\"}} onClick = {()=>handleUpdateRequest(\"approved\")}>Approve</Button>\n        <Button variant=\"outlined\" style={{color:\"red\"}} onClick = {()=>handleUpdateRequest(\"rejected\")}>Reject</Button>\n        <ReactTable\n          className=\"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n          getTrProps={(state, rowInfo, column) => {\n            return {\n              className: \"cursor-pointer\",\n              onClick: (e, handleOriginal) => {\n                if (rowInfo) {\n                  // dispatch(Actions.openEditContactDialog(rowInfo.original));\n                }\n              }\n            }\n          }}\n          data={props.data}\n          columns={[\n            {\n              Header: \"Sl No\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"sno\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Entry No\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"entry_no\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Name\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"name\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Enrolment Type\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"enrol_type\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"CGPA\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"cgpa\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Department\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"dept\",\n              className: \"justify-center\",\n\n            },\n\n\n            {\n              Header: \"Specialisation\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor:\"spec\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: \"Credits Completed\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"credits_completed\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Graduation Year\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"graduation\",\n              className: \"justify-center\",\n\n            },\n            {\n              Header: \"Status\",\n              filterable: true,\n              sortable: true,\n              className: \"font-bold\",\n              accessor: \"status\",\n              className: \"justify-center\",\n\n            },\n\n            {\n              Header: () => (\n                <Checkbox\n                  \n\n                  // onClick={(event) => {\n                  //   event.stopPropagation();\n                  // }}\n                  // onChange={(event) => {\n                     // event.target.checked ? selectAllContacts()) : deSelectAllContacts());\n                  // }}\n                // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n                // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n                />\n              ),\n              accessor: \"\",\n              Cell: row => {\n                return (<Checkbox\n\n                    name = {row.original.enrolmentId}\n                    checked={checklist[row.original.enrolmentId]}\n                    onChange = {handleChecked}\n                  // onClick={(event) => {\n                     // event.stopPropagation();\n                  // }}\n                // checked={selectedContactIds.includes(row.value.id)}\n                // onChange={() => dispatch(Actions.toggleInSelectedContacts(row.value.id))}\n                />\n                )\n              },\n              className: \"justify-center\",\n              sortable: false,\n              width: 64\n            },\n\n\n          ]}\n          defaultPageSize={10}\n          noDataText=\"No Requests found\"\n        /></Container>\n\n    </FuseAnimate>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}