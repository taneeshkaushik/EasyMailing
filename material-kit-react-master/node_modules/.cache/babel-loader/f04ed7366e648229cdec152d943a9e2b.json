{"ast":null,"code":"import _defineProperty from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport axiosInstance from 'app/main/axios';\nexport default function RequestList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      enrollmentList = _useState2[0],\n      setEnrollmentList = _useState2[1];\n\n  var _useState3 = useState(props.enrolIds),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checklist = _useState4[0],\n      setCheckedState = _useState4[1];\n\n  function handleUpdateRequest(message) {\n    axiosInstance.put('update-request-status/', {\n      'action': message,\n      'enrollments': props.enrolIds\n    }).then(function (res) {\n      console.log(res);\n    });\n  }\n\n  var handleChecked = function handleChecked(event) {\n    setCheckedState(_objectSpread({}, checklist, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  return React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 35,\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.courseName), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      color: \"green\"\n    },\n    onClick: function onClick() {\n      return handleUpdateRequest(\"approved\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Approve\"), React.createElement(Button, {\n    variant: \"outlined\",\n    style: {\n      color: \"red\"\n    },\n    onClick: function onClick() {\n      return handleUpdateRequest(\"rejected\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Reject\"), React.createElement(ReactTable, {\n    className: \"-striped -highlight h-full sm:rounded-16 overflow-hidden \",\n    getTrProps: function getTrProps(state, rowInfo, column) {\n      return {\n        className: \"cursor-pointer\",\n        onClick: function onClick(e, handleOriginal) {\n          if (rowInfo) {// dispatch(Actions.openEditContactDialog(rowInfo.original));\n          }\n        }\n      };\n    },\n    data: props.data,\n    columns: columns,\n    defaultPageSize: 10,\n    noDataText: \"No Requests found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PendingWork/RequestList.js"],"names":["React","useEffect","useState","Avatar","Button","Checkbox","Container","Icon","IconButton","Paper","Typography","FuseUtils","FuseAnimate","useDispatch","useSelector","ReactTable","Grid","ArrowBackIcon","axiosInstance","RequestList","props","enrollmentList","setEnrollmentList","enrolIds","checklist","setCheckedState","handleUpdateRequest","message","put","then","res","console","log","handleChecked","event","target","name","checked","textAlign","fontSize","color","courseName","state","rowInfo","column","className","onClick","e","handleOriginal","data","columns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Checkbox, Container, Icon, IconButton, Paper, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport { Grid } from 'react-virtualized';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport axiosInstance from 'app/main/axios';\n\n\nexport default function RequestList(props) {\n\n  const [enrollmentList , setEnrollmentList] = useState([]);\n  const [checklist , setCheckedState] = useState(props.enrolIds);\n\n\n  function handleUpdateRequest(message){\n\n    axiosInstance.put('update-request-status/', \n      {\n      'action':message,\n      'enrollments':props.enrolIds\n      }\n      ).then((res)=>\n        {\n        console.log(res);\n        \n        }\n    )\n\n  }\n  const handleChecked = (event) => {\n    setCheckedState({ ...checklist, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n      <Container>\n        <br></br>\n        <Typography style={{ textAlign: \"center\", fontSize: 35, color: \"red\" }}>{props.courseName}</Typography>\n        <br></br>\n        <Button variant=\"outlined\" style={{color:\"green\"}} onClick = {()=>handleUpdateRequest(\"approved\")}>Approve</Button>\n        <Button variant=\"outlined\" style={{color:\"red\"}} onClick = {()=>handleUpdateRequest(\"rejected\")}>Reject</Button>\n        <ReactTable\n          className=\"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n          getTrProps={(state, rowInfo, column) => {\n            return {\n              className: \"cursor-pointer\",\n              onClick: (e, handleOriginal) => {\n                if (rowInfo) {\n                  // dispatch(Actions.openEditContactDialog(rowInfo.original));\n                }\n              }\n            }\n          }}\n          data={props.data}\n          columns={columns}\n          defaultPageSize={10}\n          noDataText=\"No Requests found\"\n        /></Container>\n\n    </FuseAnimate>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}