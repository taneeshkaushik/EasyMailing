{"ast":null,"code":"import _defineProperty from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/usables/CourseList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Checkbox, Icon, IconButton, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport history from '@history';\nimport Button from '@material-ui/core/Button'; // import {CSVLink, CSVDownload} from 'react-csv';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      background: background\n    }\n  };\n});\nexport default function CourseList(props) {\n  var _React$createElement;\n\n  console.log(props.data, \"jkjhdafkjagljkafhglha;luojhgb\");\n  var classes = useStyles();\n\n  function exportTableToExcel() {\n    var csv = '';\n    props.columns.forEach(function (row) {\n      var data = row.Header; // console.log(data);\n\n      csv += data + ',';\n    });\n    csv += \"\\n\";\n\n    for (var i = 0; i < props.data.length; i++) {\n      var x = props.data[i]; // console.log(x[\"courseCode\"])\n\n      props.columns.forEach(function (row) {\n        var t = x[row.accessor.toString()];\n        csv += t + ',';\n      });\n      csv += '\\n';\n    } // console.log(csv);\n\n\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    hiddenElement.download = 'data.csv';\n    hiddenElement.click();\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: exportTableToExcel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Export\"), React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ReactTable, (_React$createElement = {\n    id: \"dataTable\",\n    className: \"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n  }, _defineProperty(_React$createElement, \"className\", classes.table), _defineProperty(_React$createElement, \"getTrProps\", function getTrProps(state, rowInfo, column) {\n    return {\n      className: \"cursor-pointer\",\n      onClick: function onClick(e, handleOriginal) {\n        if (rowInfo) {// history.push('crp/coursedetails/1/');;\n          // dispatch(Actions.openEditContactDialog(rowInfo.original));\n        }\n      }\n    };\n  }), _defineProperty(_React$createElement, \"data\", props.data), _defineProperty(_React$createElement, \"columns\", props.columns), _defineProperty(_React$createElement, \"defaultPageSize\", 5), _defineProperty(_React$createElement, \"noDataText\", \"Nothing found\"), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/usables/CourseList.js"],"names":["React","useEffect","useState","Avatar","Checkbox","Icon","IconButton","Typography","FuseUtils","FuseAnimate","useDispatch","useSelector","ReactTable","history","Button","makeStyles","withStyles","useStyles","theme","table","background","CourseList","props","console","log","data","classes","exportTableToExcel","csv","columns","forEach","row","Header","i","length","x","t","accessor","toString","hiddenElement","document","createElement","href","encodeURI","target","download","click","state","rowInfo","column","className","onClick","e","handleOriginal"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Avatar, Checkbox, Icon, IconButton, Typography} from '@material-ui/core';\nimport {FuseUtils, FuseAnimate} from '@fuse';\nimport {useDispatch, useSelector} from 'react-redux';\nimport ReactTable from \"react-table\";\nimport history from '@history';\nimport Button from '@material-ui/core/Button';\n// import {CSVLink, CSVDownload} from 'react-csv';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table:{\n        background\n    },\n  }));\n\n\nexport default function CourseList(props) {\n console.log(props.data, \"jkjhdafkjagljkafhglha;luojhgb\")\n const classes = useStyles();\n\nfunction exportTableToExcel(){\n    \n    var csv ='' ;\n    props.columns.forEach(function(row){\n        var data = row.Header;\n        // console.log(data);\n        csv += data +',';\n    });\n    csv += \"\\n\";\n    for(var i = 0 ; i< props.data.length ; i++){\n        var x = props.data[i];\n        // console.log(x[\"courseCode\"])\n        props.columns.forEach(function(row){\n            var t =  x[row.accessor.toString()];\n            csv += t +',';\n            \n        });\n\n    csv += '\\n';\n\n    }\n\n \n    // console.log(csv);\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    hiddenElement.download = 'data.csv';\n    hiddenElement.click();\n}\n\n  return (\n<div>\n<Button onClick = {exportTableToExcel}>Export</Button>\n<FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n\n<ReactTable\n    id  = \"dataTable\"\n    className=\"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n    className={classes.table}\n    getTrProps={(state, rowInfo, column) => {\n        return {\n            className: \"cursor-pointer\",\n            onClick  : (e, handleOriginal) => {\n                if ( rowInfo )\n                {\n                    // history.push('crp/coursedetails/1/');;\n\n                    // dispatch(Actions.openEditContactDialog(rowInfo.original));\n                }\n            }\n        }\n    }}\n    data={props.data}\n    columns={\n        \n        props.columns\n    }\n\n    // columns={[\n    //     {\n    //         Header   : () => (\n    //             <Checkbox\n    //                 onClick={(event) => {\n    //                     event.stopPropagation();\n    //                 }}\n    //                 onChange={(event) => {\n    //                     // event.target.checked ? dispatch(Actions.selectAllContacts()) : dispatch(Actions.deSelectAllContacts());\n    //                 }}\n    //                 // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n    //                 // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n    //             />\n    //         ),\n    //         accessor : \"\",\n    //         Cell     : row => {\n    //             return (<Checkbox\n    //                     onClick={(event) => {\n    //                         event.stopPropagation();\n    //                     }}\n    //                     // checked={selectedContactIds.includes(row.value.id)}\n    //                     // onChange={() => dispatch(Actions.toggleInSelectedContacts(row.value.id))}\n    //                 />\n    //             )\n    //         },\n    //         className: \"justify-center\",\n    //         sortable : false,\n    //         width    : 64\n    //     },\n    //     // {\n    //     //     // Header   : () => (\n    //     //         // selectedContactIds.length > 0 && (\n    //     //             // <ContactsMultiSelectMenu/>\n    //     //         // )\n    //     //     // ),\n    //     //     accessor : \"avatar\",\n    //     //     Cell     : row => (\n    //     //         <Avatar className=\"mr-8\" alt={row.original.name} src={row.value}/>\n    //     //     ),\n    //     //     className: \"justify-center\",\n    //     //     width    : 64,\n    //     //     sortable : false\n    //     // },\n    //    \n    // ]}\n    defaultPageSize={5}\n    noDataText=\"Nothing found\"\n/>\n</FuseAnimate>\n</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}