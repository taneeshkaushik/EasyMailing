{"ast":null,"code":"import _toConsumableArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/course/tabs/People.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\nexport default function People() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState([1]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Teachers\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, [0, 1, 2, 3].map(function (value) {\n    var labelId = \"checkbox-list-secondary-label-\".concat(value);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      key: value,\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Avatar n\\xB0\".concat(value + 1),\n      src: \"/static/images/avatar/\".concat(value + 1, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MailOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  })), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Classmates\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, [0, 1, 2, 3].map(function (value) {\n    var labelId = \"checkbox-list-secondary-label-\".concat(value);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      key: value,\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Avatar n\\xB0\".concat(value + 1),\n      src: \"/static/images/avatar/\".concat(value + 1, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MailOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  })));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/course/tabs/People.js"],"names":["React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Avatar","MailOutlineIcon","Typography","Divider","useStyles","theme","root","width","backgroundColor","palette","background","paper","People","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n\nexport default function People() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1)\n    {\n      newChecked.push(value);\n    } \n    else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div>\n    <Typography >\n        Teachers\n    </Typography>\n    <Divider />\n\n    <List dense className={classes.root}>\n      {[0, 1, 2, 3].map((value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n            <div>\n          <ListItem key={value} button>\n            <ListItemAvatar>\n              <Avatar\n                alt={`Avatar n°${value + 1}`}\n                src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n            <ListItemSecondaryAction>\n                <MailOutlineIcon />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <Divider/>\n          </div>\n        );\n      })}\n    </List>\n\n\n    <Typography>\n        Classmates\n    </Typography>\n\n    <Divider />\n\n    <List dense className={classes.root}>\n      {[0, 1, 2, 3].map((value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n            <div>\n          <ListItem key={value} button>\n            <ListItemAvatar>\n              <Avatar\n                alt={`Avatar n°${value + 1}`}\n                src={`/static/images/avatar/${value + 1}.jpg`}\n              />\n            </ListItemAvatar>\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n            <ListItemSecondaryAction>\n                <MailOutlineIcon />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <Divider />\n          </div>\n        );\n      })}\n    </List>\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}