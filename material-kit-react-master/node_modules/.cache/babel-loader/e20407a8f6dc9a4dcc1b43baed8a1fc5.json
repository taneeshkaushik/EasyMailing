{"ast":null,"code":"import _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/@fuse/components/FusePageLayouts/carded/FusePageCardedSidebar.js\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport { Hidden, Drawer } from '@material-ui/core';\nimport clsx from 'clsx';\nimport FusePageCardedSidebarContent from './FusePageCardedSidebarContent';\n\nfunction FusePageCardedSidebar(props, ref) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var classes = props.classes;\n  useImperativeHandle(ref, function () {\n    return {\n      toggleSidebar: handleToggleDrawer\n    };\n  });\n\n  var handleToggleDrawer = function handleToggleDrawer() {\n    setIsOpen(!isOpen);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    lgUp: props.variant === 'permanent',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.position,\n    open: isOpen,\n    onClose: function onClose(ev) {\n      return handleToggleDrawer();\n    },\n    classes: {\n      root: clsx(classes.sidebarWrapper, props.variant),\n      paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    container: props.rootRef.current,\n    BackdropProps: {\n      classes: {\n        root: classes.backdrop\n      }\n    },\n    style: {\n      position: 'absolute'\n    },\n    onClick: function onClick(ev) {\n      return handleToggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FusePageCardedSidebarContent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), props.variant === 'permanent' && React.createElement(Hidden, {\n    mdDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.sidebarWrapper, props.variant),\n    open: isOpen,\n    classes: {\n      paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FusePageCardedSidebarContent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))));\n}\n\nexport default React.forwardRef(FusePageCardedSidebar);","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/@fuse/components/FusePageLayouts/carded/FusePageCardedSidebar.js"],"names":["React","useImperativeHandle","useState","Hidden","Drawer","clsx","FusePageCardedSidebarContent","FusePageCardedSidebar","props","ref","isOpen","setIsOpen","classes","toggleSidebar","handleToggleDrawer","variant","position","ev","root","sidebarWrapper","paper","sidebar","leftSidebar","rightSidebar","keepMounted","rootRef","current","backdrop","forwardRef"],"mappings":"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","sourcesContent":["import React, {useImperativeHandle, useState} from 'react';\nimport {Hidden, Drawer} from '@material-ui/core';\nimport clsx from 'clsx';\nimport FusePageCardedSidebarContent from './FusePageCardedSidebarContent';\n\nfunction FusePageCardedSidebar(props, ref)\n{\n    const [isOpen, setIsOpen] = useState(false);\n    const classes = props.classes;\n\n    useImperativeHandle(ref, () => ({\n        toggleSidebar: handleToggleDrawer\n    }));\n\n    const handleToggleDrawer = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <Hidden lgUp={props.variant === 'permanent'}>\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={props.position}\n                    open={isOpen}\n                    onClose={(ev) => handleToggleDrawer()}\n                    classes={{\n                        root : clsx(classes.sidebarWrapper, props.variant),\n                        paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n                    }}\n                    ModalProps={{\n                        keepMounted: true // Better open performance on mobile.\n                    }}\n                    container={props.rootRef.current}\n                    BackdropProps={{\n                        classes: {\n                            root: classes.backdrop\n                        }\n                    }}\n                    style={{position: 'absolute'}}\n                    onClick={(ev) => handleToggleDrawer()}\n                >\n                    <FusePageCardedSidebarContent {...props}/>\n                </Drawer>\n            </Hidden>\n            {props.variant === 'permanent' && (\n                <Hidden mdDown>\n                    <Drawer\n                        variant=\"permanent\"\n                        className={clsx(classes.sidebarWrapper, props.variant)}\n                        open={isOpen}\n                        classes={{\n                            paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n                        }}>\n                        <FusePageCardedSidebarContent {...props}/>\n                    </Drawer>\n                </Hidden>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default React.forwardRef(FusePageCardedSidebar);\n"]},"metadata":{},"sourceType":"module"}