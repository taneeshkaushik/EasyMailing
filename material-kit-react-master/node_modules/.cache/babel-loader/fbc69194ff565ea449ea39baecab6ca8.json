{"ast":null,"code":"var _jsxFileName = \"/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/@fuse/components/FuseMessage/FuseMessage.js\";\nimport React from 'react';\nimport { Snackbar, IconButton, Icon, SnackbarContent } from '@material-ui/core';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Actions from 'app/store/actions';\nimport { makeStyles } from '@material-ui/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    success: {\n      backgroundColor: green[600],\n      color: '#FFFFFF'\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n      color: theme.palette.getContrastText(theme.palette.error.dark)\n    },\n    info: {\n      backgroundColor: blue[600],\n      color: '#FFFFFF'\n    },\n    warning: {\n      backgroundColor: amber[600],\n      color: '#FFFFFF'\n    }\n  };\n});\nvar variantIcon = {\n  success: \"check_circle\",\n  warning: \"warning\",\n  error: \"error_outline\",\n  info: \"info\"\n};\n\nfunction FuseMessage(props) {\n  var dispatch = useDispatch();\n  var state = useSelector(function (_ref) {\n    var fuse = _ref.fuse;\n    return fuse.message.state;\n  });\n  var options = useSelector(function (_ref2) {\n    var fuse = _ref2.fuse;\n    return fuse.message.options;\n  });\n  var classes = useStyles();\n  return React.createElement(Snackbar, Object.assign({}, options, {\n    open: state,\n    onClose: function onClose() {\n      return dispatch(Actions.hideMessage());\n    },\n    classes: {\n      root: classes.root\n    },\n    ContentProps: {\n      variant: 'body2',\n      headlineMapping: {\n        body1: 'div',\n        body2: 'div'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    className: clsx(classes[options.variant]),\n    message: React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, variantIcon[options.variant] && React.createElement(Icon, {\n      className: \"mr-8\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, variantIcon[options.variant]), options.message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: function onClick() {\n        return dispatch(Actions.hideMessage());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"close\"))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nexport default React.memo(FuseMessage);","map":{"version":3,"sources":["/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/@fuse/components/FuseMessage/FuseMessage.js"],"names":["React","Snackbar","IconButton","Icon","SnackbarContent","green","amber","blue","useDispatch","useSelector","clsx","Actions","makeStyles","useStyles","theme","root","success","backgroundColor","color","error","palette","dark","getContrastText","info","warning","variantIcon","FuseMessage","props","dispatch","state","fuse","message","options","classes","hideMessage","variant","headlineMapping","body1","body2","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Snackbar, IconButton, Icon, SnackbarContent} from '@material-ui/core';\nimport {green, amber, blue} from '@material-ui/core/colors';\nimport {useDispatch, useSelector} from 'react-redux';\nimport clsx from 'clsx';\nimport * as Actions from 'app/store/actions';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root   : {},\n    success: {\n        backgroundColor: green[600],\n        color          : '#FFFFFF'\n    },\n    error  : {\n        backgroundColor: theme.palette.error.dark,\n        color          : theme.palette.getContrastText(theme.palette.error.dark)\n    },\n    info   : {\n        backgroundColor: blue[600],\n        color          : '#FFFFFF'\n    },\n    warning: {\n        backgroundColor: amber[600],\n        color          : '#FFFFFF'\n    }\n}));\n\nconst variantIcon = {\n    success: \"check_circle\",\n    warning: \"warning\",\n    error  : \"error_outline\",\n    info   : \"info\"\n};\n\nfunction FuseMessage(props)\n{\n    const dispatch = useDispatch();\n    const state = useSelector(({fuse}) => fuse.message.state);\n    const options = useSelector(({fuse}) => fuse.message.options);\n\n    const classes = useStyles();\n\n    return (\n        <Snackbar\n            {...options}\n            open={state}\n            onClose={() => dispatch(Actions.hideMessage())}\n            classes={{\n                root: classes.root\n            }}\n            ContentProps={{\n                variant        : 'body2',\n                headlineMapping: {\n                    body1: 'div',\n                    body2: 'div'\n                }\n            }}\n        >\n            <SnackbarContent\n                className={clsx(classes[options.variant])}\n                message={\n                    <div className=\"flex items-center\">\n                        {variantIcon[options.variant] && (\n                            <Icon className=\"mr-8\" color=\"inherit\">{variantIcon[options.variant]}</Icon>\n                        )}\n                        {options.message}\n                    </div>\n                }\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        onClick={() => dispatch(Actions.hideMessage())}\n                    >\n                        <Icon>close</Icon>\n                    </IconButton>\n                ]}\n            />\n        </Snackbar>\n    );\n}\n\nexport default React.memo(FuseMessage);\n"]},"metadata":{},"sourceType":"module"}