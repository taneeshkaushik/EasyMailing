{"ast":null,"code":"import * as UserActions from './user.actions';\nimport * as Actions from 'app/store/actions';\nimport jwtService from 'app/services/jwtService';\nexport var REGISTER_ERROR = 'REGISTER_ERROR';\nexport var REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport function submitRegister(userData) {\n  return function (dispatch) {\n    return jwtService.createUser(userData).then(function (user) {\n      // dispatch(UserActions.setUserData(user));\n      return dispatch({\n        type: REGISTER_SUCCESS\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: REGISTER_ERROR,\n        payload: error\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/auth/store/actions/register.actions.js"],"names":["UserActions","Actions","jwtService","REGISTER_ERROR","REGISTER_SUCCESS","submitRegister","userData","dispatch","createUser","then","user","type","catch","error","payload"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EACP;AACI,SAAO,UAACC,QAAD;AAAA,WACHL,UAAU,CAACM,UAAX,CAAsBF,QAAtB,EACKG,IADL,CACU,UAACC,IAAD,EAAU;AACR;AACA,aAAOH,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAEP;AADM,OAAD,CAAf;AAGH,KANT,EAQKQ,KARL,CAQW,UAAAC,KAAK,EAAI;AACZ,aAAON,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAKR,cADG;AAEZW,QAAAA,OAAO,EAAED;AAFG,OAAD,CAAf;AAIH,KAbL,CADG;AAAA,GAAP;AAeH","sourcesContent":["\nimport * as UserActions from './user.actions';\nimport * as Actions from 'app/store/actions';\nimport jwtService from 'app/services/jwtService';\n\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport function submitRegister(userData)\n{\n    return (dispatch) =>\n        jwtService.createUser(userData)\n            .then((user) => {\n                    // dispatch(UserActions.setUserData(user));\n                    return dispatch({\n                        type: REGISTER_SUCCESS\n                    });\n                }\n            )\n            .catch(error => {\n                return dispatch({\n                    type   : REGISTER_ERROR,\n                    payload: error\n                });\n            });\n}\n\n"]},"metadata":{},"sourceType":"module"}