{"ast":null,"code":"import _slicedToArray from \"/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PastOfferingDetails/GradeStats.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ResponsivePie } from '@nivo/pie';\nimport axiosInstance from 'app/main/axios';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Button } from '@material-ui/core';\nimport CourseList from 'app/main/academy/crp/usables/CourseList';\nimport { ResponsiveBar } from '@nivo/bar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: 500\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function Enrolments(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState([[{}]]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pieDataStack = _React$useState2[0],\n      setPieDataStack = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      level = _React$useState4[0],\n      setLevel = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      enrolments = _React$useState6[0],\n      setEnrolments = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dataList = _React$useState8[0],\n      setDataList = _React$useState8[1]; // useEffect(() => {\n  //   axiosInstance.get('get-enrolments/', {\n  //     params: {\n  //       offeringId: 1\n  //     }\n  //   }).then((response) => {\n  //     setEnrolments(response.data);\n  //     const list = []\n  //     for (var i = 0; i < response.data.length; i++) {\n  //       var value = response.data[i];\n  //       list.push(\n  //         [i + 1,\n  //         value.studentId__rollNum,\n  //         `${value.studentId_first_name} ${value.studentId_last_name}`,\n  //         value.enrolType,\n  //         value.status\n  //         ]\n  //       )\n  //     }\n  //     setDataList(list);\n  //   });\n  // }, [props]);\n  // function bucketer(matchParameters, basis) {\n  //   const matchings = Object.keys(matchParameters)\n  //   var seperatedData = {}\n  //   for (var i = 0; i < enrolments.length; i++) {\n  //     var flag = 1;\n  //     for (var j = 0; j < matchings.length; j++) {\n  //       if (enrolments[i].matchings[j] != matchParameters.matchings[j]) {\n  //         flag = 0;\n  //         break;\n  //       }\n  //       if (flag == 1) {\n  //         seperatedData[enrolments.basis] += 1;\n  //       }\n  //     }\n  //   }\n  //   return seperatedData\n  // }\n  // const [pieData, setPieData] = React.useState(data);\n  // function pieDataMaker(labelDict) {\n  //   var newLabels = Object.keys(labelDict)\n  //   var newPieInput = [{}]\n  //   for (var i = 0; i < newLabels.length; i++) {\n  //     var slice = {\n  //       'id': newLabels[i],\n  //       'label': newLabels[i],\n  //       'value': labelDict[newLabels[i]]\n  //     }\n  //     newPieInput.push(slice);\n  //   }\n  //   setPieDataStack(pieDataStack.push(newPieInput));\n  //   setLevel(level + 1);\n  // }\n  // function sliceClicked(node, event) {\n  //   if (level == 0) {\n  //     setPieData(data1);\n  //     setLevel(level + 1);\n  //   }\n  //   if (level == 1) {\n  //     setPieData(data2);\n  //     setLevel(level + 1);\n  //   }\n  //   if (level == 2) {\n  //     setPieData(data3);\n  //     setLevel(level + 1);\n  //   }\n  //   else return;\n  //   // if(level==0)\n  //   // {\n  //   //   var labelDict=bucketer(node.id, 'batch')\n  //   //   pieDataMaker(labelDict)\n  //   // }\n  //   // else if(level==1)\n  //   // {\n  //   //   var labelDict=bucketer(node.id, 'department')\n  //   //   pieDataMaker(labelDict)\n  //   // }\n  //   // else if(level==2)\n  //   // {\n  //   //   return ;\n  //   // }\n  // }\n  // function back() {\n  //   if (level == 0) {\n  //     return;\n  //   }\n  //   if (level == 1) {\n  //     setPieData(data);\n  //     setLevel(level - 1);\n  //   }\n  //   if (level == 2) {\n  //     setPieData(data1);\n  //     setLevel(level - 1);\n  //   }\n  //   if (level == 3) {\n  //     setPieData(data2)\n  //     setLevel(level - 1);\n  //   }\n  //   else return;\n  // }\n\n\n  var data = [{\n    \"grade\": \"A\",\n    \"value\": 5\n  }, {\n    \"grade\": \"B\",\n    \"value\": 20\n  }, {\n    \"grade\": \"C\",\n    \"value\": 50\n  }, {\n    \"grade\": \"D\",\n    \"value\": 15\n  }, {\n    \"grade\": \"E\",\n    \"value\": 10\n  }, {\n    \"grade\": \"F\",\n    \"value\": 5\n  }];\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(ResponsiveBar, {\n    data: data,\n    indexBy: \"grade\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    colorBy: \"value\",\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Grade',\n      legendPosition: 'middle',\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'StudentsCount',\n      legendPosition: 'middle',\n      legendOffset: -40\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), dataList != null ? React.createElement(CourseList, {\n    data: dataList,\n    columns: ['S.no', 'Roll No', 'Name', 'Type', 'Status'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }) : null);\n}","map":{"version":3,"sources":["/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/src/app/main/academy/crp/tabs/PastOfferingDetails/GradeStats.js"],"names":["React","useEffect","makeStyles","Paper","Grid","ResponsivePie","axiosInstance","ArrowBackIcon","Button","CourseList","ResponsiveBar","useStyles","theme","root","flexGrow","height","paper","padding","spacing","textAlign","color","palette","text","secondary","Enrolments","props","classes","useState","pieDataStack","setPieDataStack","level","setLevel","enrolments","setEnrolments","dataList","setDataList","data","top","right","bottom","left","type","round","scheme","id","background","size","stagger","rotation","lineWidth","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ResponsivePie } from '@nivo/pie'\nimport axiosInstance from 'app/main/axios';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Button } from '@material-ui/core'\nimport CourseList from 'app/main/academy/crp/usables/CourseList'\nimport { ResponsiveBar } from '@nivo/bar'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: 500\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport default function Enrolments(props) {\n  const classes = useStyles();\n  const [pieDataStack, setPieDataStack] = React.useState([[{}]]);\n  const [level, setLevel] = React.useState(0);\n  const [enrolments, setEnrolments] = React.useState(null);\n  const [dataList, setDataList] = React.useState(null);\n  // useEffect(() => {\n  //   axiosInstance.get('get-enrolments/', {\n  //     params: {\n  //       offeringId: 1\n  //     }\n  //   }).then((response) => {\n  //     setEnrolments(response.data);\n  //     const list = []\n  //     for (var i = 0; i < response.data.length; i++) {\n  //       var value = response.data[i];\n  //       list.push(\n  //         [i + 1,\n  //         value.studentId__rollNum,\n  //         `${value.studentId_first_name} ${value.studentId_last_name}`,\n  //         value.enrolType,\n  //         value.status\n  //         ]\n  //       )\n  //     }\n  //     setDataList(list);\n  //   });\n  // }, [props]);\n\n\n\n  \n\n  // function bucketer(matchParameters, basis) {\n  //   const matchings = Object.keys(matchParameters)\n  //   var seperatedData = {}\n  //   for (var i = 0; i < enrolments.length; i++) {\n  //     var flag = 1;\n  //     for (var j = 0; j < matchings.length; j++) {\n  //       if (enrolments[i].matchings[j] != matchParameters.matchings[j]) {\n  //         flag = 0;\n  //         break;\n  //       }\n  //       if (flag == 1) {\n  //         seperatedData[enrolments.basis] += 1;\n  //       }\n\n  //     }\n  //   }\n  //   return seperatedData\n\n  // }\n\n  // const [pieData, setPieData] = React.useState(data);\n  // function pieDataMaker(labelDict) {\n  //   var newLabels = Object.keys(labelDict)\n  //   var newPieInput = [{}]\n  //   for (var i = 0; i < newLabels.length; i++) {\n  //     var slice = {\n  //       'id': newLabels[i],\n  //       'label': newLabels[i],\n  //       'value': labelDict[newLabels[i]]\n  //     }\n  //     newPieInput.push(slice);\n  //   }\n  //   setPieDataStack(pieDataStack.push(newPieInput));\n  //   setLevel(level + 1);\n  // }\n\n\n  // function sliceClicked(node, event) {\n  //   if (level == 0) {\n  //     setPieData(data1);\n  //     setLevel(level + 1);\n  //   }\n  //   if (level == 1) {\n  //     setPieData(data2);\n  //     setLevel(level + 1);\n  //   }\n  //   if (level == 2) {\n  //     setPieData(data3);\n  //     setLevel(level + 1);\n  //   }\n\n  //   else return;\n\n\n  //   // if(level==0)\n  //   // {\n  //   //   var labelDict=bucketer(node.id, 'batch')\n  //   //   pieDataMaker(labelDict)\n  //   // }\n  //   // else if(level==1)\n  //   // {\n  //   //   var labelDict=bucketer(node.id, 'department')\n  //   //   pieDataMaker(labelDict)\n  //   // }\n  //   // else if(level==2)\n  //   // {\n  //   //   return ;\n  //   // }\n  // }\n\n  // function back() {\n  //   if (level == 0) {\n  //     return;\n  //   }\n  //   if (level == 1) {\n  //     setPieData(data);\n  //     setLevel(level - 1);\n  //   }\n  //   if (level == 2) {\n  //     setPieData(data1);\n  //     setLevel(level - 1);\n  //   }\n  //   if (level == 3) {\n  //     setPieData(data2)\n  //     setLevel(level - 1);\n  //   }\n\n  //   else return;\n\n  // }\n\nconst data=[\n  {\n    \"grade\": \"A\",\n    \"value\":5\n    \n  },\n  {\n    \"grade\": \"B\",\n    \"value\":20\n  },\n  {\n    \"grade\": \"C\",\n    \"value\":50\n  },\n  {\n    \"grade\": \"D\",\n    \"value\":15\n  },\n  {\n    \"grade\": \"E\",\n    \"value\":10\n  },\n  {\n    \"grade\": \"F\",\n    \"value\":5\n  }\n]\n  return (\n    <div className={classes.root} >\n    <ResponsiveBar\n        data={data}\n        indexBy=\"grade\"\n        margin={{top: 50, right: 130, bottom: 50, left: 60}}\n        padding={0.3}\n        valueScale={{type: 'linear'}}\n        indexScale={{ type: 'band', round: true }}\n        colors={{ scheme: 'nivo' }}\n        colorBy='value'\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        \n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Grade',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'StudentsCount',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n    \n\n     \n      {dataList != null ? <CourseList data={dataList} columns={['S.no', 'Roll No', 'Name', 'Type', 'Status']} /> : null}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}