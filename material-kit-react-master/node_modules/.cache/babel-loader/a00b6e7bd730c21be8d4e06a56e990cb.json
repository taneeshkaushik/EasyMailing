{"ast":null,"code":"var _jsxFileName = \"/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/app/main/academy/crp/usables/CourseList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Checkbox, Icon, IconButton, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport history from '@history';\nimport Button from '@material-ui/core/Button'; // import {CSVLink, CSVDownload} from 'react-csv';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport \"./table.css\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      backgroundColor: \"green\"\n    }\n  };\n});\nexport default function CourseList(props) {\n  console.log(props.data, \"jkjhdafkjagljkafhglha;luojhgb\");\n  var classes = useStyles();\n  var cols = [{\n    Header: function Header() {\n      return React.createElement(Checkbox, {\n        onClick: function onClick(event) {\n          event.stopPropagation();\n        },\n        onChange: function onChange(event) {// event.target.checked ? dispatch(Actions.selectAllContacts()) : dispatch(Actions.deSelectAllContacts());\n        } // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n        // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    },\n    accessor: \"\",\n    // Cell: row => {\n    //     const ind=row.index;\n    //     const [value,setValue]=React.useState(false);\n    //     return (<Checkbox\n    //         onClick={(event) => {\n    //             console.log(event.target.checked)\n    //             event.stopPropagation();\n    //         }}\n    //     />\n    //     )\n    // },\n    className: \"justify-center\",\n    sortable: false,\n    width: 64\n  }];\n\n  function exportTableToExcel() {\n    var csv = '';\n    props.columns.forEach(function (row) {\n      var data = row.Header; // console.log(data);\n\n      csv += data + ',';\n    });\n    csv += \"\\n\";\n\n    for (var i = 0; i < props.data.length; i++) {\n      var x = props.data[i]; // console.log(x[\"courseCode\"])\n\n      props.columns.forEach(function (row) {\n        var t = x[row.accessor.toString()];\n        csv += t + ',';\n      });\n      csv += '\\n';\n    } // console.log(csv);\n\n\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    hiddenElement.download = 'data.csv';\n    hiddenElement.click();\n  }\n\n  var onRowClick = function onRowClick(state, rowInfo, column, instance) {\n    return {\n      onClick: function onClick(e) {\n        console.log('A Td Element was clicked!');\n        console.log('it produced this event:', e);\n        console.log('It was in this column:', column);\n        console.log('It was in this row:', rowInfo);\n        console.log('It was in this table instance:', instance);\n      }\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: exportTableToExcel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Export\"), React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    id: \"dataTable\",\n    className: \"-striped -highlight h-full sm:rounded-16 overflow-hidden \" // className={classes.table}\n    ,\n    getTrProps: onRowClick // return {\n    //     className: \"cursor-pointer\",\n    //     onClick  : (e, handleOriginal) => {\n    //         if ( rowInfo )\n    //         {\n    //             // history.push('crp/coursedetails/1/');;\n    //             // dispatch(Actions.openEditContactDialog(rowInfo.original));\n    //         }\n    //     }\n    // }\n    ,\n    data: props.data,\n    columns: props.columns // columns={[\n    //     // {\n    //     //     // Header   : () => (\n    //     //         // selectedContactIds.length > 0 && (\n    //     //             // <ContactsMultiSelectMenu/>\n    //     //         // )\n    //     //     // ),\n    //     //     accessor : \"avatar\",\n    //     //     Cell     : row => (\n    //     //         <Avatar className=\"mr-8\" alt={row.original.name} src={row.value}/>\n    //     //     ),\n    //     //     className: \"justify-center\",\n    //     //     width    : 64,\n    //     //     sortable : false\n    //     // },\n    //    \n    // ]}\n    ,\n    defaultPageSize: 5,\n    noDataText: \"Nothing found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/app/main/academy/crp/usables/CourseList.js"],"names":["React","useEffect","useState","Avatar","Checkbox","Icon","IconButton","Typography","FuseUtils","FuseAnimate","useDispatch","useSelector","ReactTable","history","Button","makeStyles","withStyles","useStyles","theme","table","backgroundColor","CourseList","props","console","log","data","classes","cols","Header","event","stopPropagation","accessor","className","sortable","width","exportTableToExcel","csv","columns","forEach","row","i","length","x","t","toString","hiddenElement","document","createElement","href","encodeURI","target","download","click","onRowClick","state","rowInfo","column","instance","onClick","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, Checkbox, Icon, IconButton, Typography } from '@material-ui/core';\nimport { FuseUtils, FuseAnimate } from '@fuse';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport history from '@history';\nimport Button from '@material-ui/core/Button';\n// import {CSVLink, CSVDownload} from 'react-csv';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\n\nimport \"./table.css\";\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        backgroundColor: \"green\"\n    },\n}));\n\n\nexport default function CourseList(props) {\n    console.log(props.data, \"jkjhdafkjagljkafhglha;luojhgb\")\n    const classes = useStyles();\n    const cols = [\n        {\n            Header: () => (\n                <Checkbox\n                    onClick={(event) => {\n                        event.stopPropagation();\n                    }}\n                    onChange={(event) => {\n                        // event.target.checked ? dispatch(Actions.selectAllContacts()) : dispatch(Actions.deSelectAllContacts());\n                    }}\n                // checked={selectedContactIds.length === Object.keys(contacts).length && selectedContactIds.length > 0}\n                // indeterminate={selectedContactIds.length !== Object.keys(contacts).length && selectedContactIds.length > 0}\n                />\n            ),\n            accessor: \"\",\n            // Cell: row => {\n            //     const ind=row.index;\n            //     const [value,setValue]=React.useState(false);\n            //     return (<Checkbox\n            //         onClick={(event) => {\n            //             console.log(event.target.checked)\n            //             event.stopPropagation();\n            //         }}\n            //     />\n            //     )\n            // },\n            className: \"justify-center\",\n            sortable: false,\n            width: 64\n        },\n    ];\n\n\n    function exportTableToExcel() {\n\n        var csv = '';\n        props.columns.forEach(function (row) {\n            var data = row.Header;\n            // console.log(data);\n            csv += data + ',';\n        });\n        csv += \"\\n\";\n        for (var i = 0; i < props.data.length; i++) {\n            var x = props.data[i];\n            // console.log(x[\"courseCode\"])\n            props.columns.forEach(function (row) {\n                var t = x[row.accessor.toString()];\n                csv += t + ',';\n\n            });\n\n            csv += '\\n';\n\n        }\n\n\n        // console.log(csv);\n        var hiddenElement = document.createElement('a');\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        hiddenElement.target = '_blank';\n        hiddenElement.download = 'data.csv';\n        hiddenElement.click();\n    }\n    const onRowClick = (state, rowInfo, column, instance) => {\n        return {\n            onClick: e => {\n                console.log('A Td Element was clicked!')\n                console.log('it produced this event:', e)\n                console.log('It was in this column:', column)\n                console.log('It was in this row:', rowInfo)\n                console.log('It was in this table instance:', instance)\n            }\n        }\n    }\n    return (\n        <div>\n            <Button onClick={exportTableToExcel}>Export</Button>\n            <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n\n                <ReactTable\n                    id=\"dataTable\"\n                    className=\"-striped -highlight h-full sm:rounded-16 overflow-hidden \"\n                    // className={classes.table}\n                    getTrProps={onRowClick}\n                        // return {\n                        //     className: \"cursor-pointer\",\n                        //     onClick  : (e, handleOriginal) => {\n                        //         if ( rowInfo )\n                        //         {\n                        //             // history.push('crp/coursedetails/1/');;\n\n                        //             // dispatch(Actions.openEditContactDialog(rowInfo.original));\n                        //         }\n                        //     }\n                        // }\n                    data={props.data}\n                    columns={\n\n                        props.columns\n                    }\n\n                    // columns={[\n\n                    //     // {\n                    //     //     // Header   : () => (\n                    //     //         // selectedContactIds.length > 0 && (\n                    //     //             // <ContactsMultiSelectMenu/>\n                    //     //         // )\n                    //     //     // ),\n                    //     //     accessor : \"avatar\",\n                    //     //     Cell     : row => (\n                    //     //         <Avatar className=\"mr-8\" alt={row.original.name} src={row.value}/>\n                    //     //     ),\n                    //     //     className: \"justify-center\",\n                    //     //     width    : 64,\n                    //     //     sortable : false\n                    //     // },\n                    //    \n                    // ]}\n                    defaultPageSize={5}\n                    noDataText=\"Nothing found\"\n                />\n            </FuseAnimate>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}