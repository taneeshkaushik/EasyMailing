{"ast":null,"code":"import jwtService from 'app/services/jwtService';\nimport { setUserData } from './user.actions';\nimport * as Actions from 'app/store/actions';\nimport history from '@history';\nimport store from 'app/store';\nimport { useSelector, useDispatch } from 'react-redux';\nexport var LOGIN_ERROR = 'LOGIN_ERROR';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport function submitLogin(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    Actions.showMessage({\n      message: 'Logging in'\n    });\n    jwtService.signInWithEmailAndPassword(email, password).then(function (user) {\n      console.log(user);\n      dispatch(setUserData(user));\n    }).then(function () {\n      Actions.showMessage({\n        message: 'Logged in'\n      });\n      history.push('/academy/');\n      return dispatch({\n        type: LOGIN_SUCCESS\n      });\n    });\n  };\n}\nexport function submitautologin() {\n  return function (dispatch) {\n    jwtService.axiosInstance.get('/basic-user-info/').then(function (user) {\n      console.log(user.data);\n      dispatch(setUserData(user.data));\n      Actions.showMessage({\n        message: 'Logged in'\n      });\n      if (user) return dispatch({\n        type: LOGIN_SUCCESS\n      });else return dispatch({\n        type: LOGIN_ERROR,\n        payload: user.error\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/app/auth/store/actions/login.actions.js"],"names":["jwtService","setUserData","Actions","history","store","useSelector","useDispatch","LOGIN_ERROR","LOGIN_SUCCESS","submitLogin","email","password","dispatch","showMessage","message","signInWithEmailAndPassword","then","user","console","log","push","type","submitautologin","axiosInstance","get","data","payload","error"],"mappings":"AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,SAASC,WAAT,OAA0C;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC7C,SAAO,UAACC,QAAD,EAAc;AACjBV,IAAAA,OAAO,CAACW,WAAR,CAAoB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB;AACAd,IAAAA,UAAU,CAACe,0BAAX,CAAsCL,KAAtC,EAA6CC,QAA7C,EACIK,IADJ,CACS,UAACC,IAAD,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,QAAQ,CAACX,WAAW,CAACgB,IAAD,CAAZ,CAAR;AACH,KAJL,EAKKD,IALL,CAKU,YAAM;AACJd,MAAAA,OAAO,CAACW,WAAR,CAAoB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAApB;AACAX,MAAAA,OAAO,CAACiB,IAAR,CAAa,WAAb;AACA,aAAOR,QAAQ,CAAC;AACZS,QAAAA,IAAI,EAAEb;AADM,OAAD,CAAf;AAGH,KAXT;AAYH,GAdD;AAeH;AAED,OAAO,SAASc,eAAT,GAA2B;AAC9B,SAAO,UAACV,QAAD,EAAc;AACjBZ,IAAAA,UAAU,CAACuB,aAAX,CAAyBC,GAAzB,CAA6B,mBAA7B,EAAkDR,IAAlD,CACI,UAACC,IAAD,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACQ,IAAjB;AACAb,MAAAA,QAAQ,CAACX,WAAW,CAACgB,IAAI,CAACQ,IAAN,CAAZ,CAAR;AACAvB,MAAAA,OAAO,CAACW,WAAR,CAAoB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAApB;AACA,UAAIG,IAAJ,EACI,OAAOL,QAAQ,CAAC;AACZS,QAAAA,IAAI,EAAEb;AADM,OAAD,CAAf,CADJ,KAKI,OAAOI,QAAQ,CAAC;AACZS,QAAAA,IAAI,EAAEd,WADM;AAEZmB,QAAAA,OAAO,EAAET,IAAI,CAACU;AAFF,OAAD,CAAf;AAIP,KAdL;AAgBH,GAjBD;AAkBH","sourcesContent":["\nimport jwtService from 'app/services/jwtService';\nimport { setUserData } from './user.actions';\nimport * as Actions from 'app/store/actions';\nimport history from '@history';\nimport store from 'app/store';\nimport { useSelector, useDispatch } from 'react-redux';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function submitLogin({ email, password }) {\n    return (dispatch) => {\n        Actions.showMessage({ message: 'Logging in' });\n        jwtService.signInWithEmailAndPassword(email, password).\n            then((user) => {\n                console.log(user);\n                dispatch(setUserData(user));\n            })\n            .then(() => {\n                    Actions.showMessage({ message: 'Logged in' });\n                    history.push('/academy/');\n                    return dispatch({\n                        type: LOGIN_SUCCESS\n                    });\n                });\n    }\n}\n\nexport function submitautologin() {\n    return (dispatch) => {\n        jwtService.axiosInstance.get('/basic-user-info/').then(\n            (user) => {\n                console.log(user.data);\n                dispatch(setUserData(user.data));\n                Actions.showMessage({ message: 'Logged in' });\n                if (user)\n                    return dispatch({\n                        type: LOGIN_SUCCESS\n                    });\n                else\n                    return dispatch({\n                        type: LOGIN_ERROR,\n                        payload: user.error\n                    });\n            }\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}