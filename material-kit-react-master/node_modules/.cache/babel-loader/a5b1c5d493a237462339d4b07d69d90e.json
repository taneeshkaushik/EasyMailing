{"ast":null,"code":"import _slicedToArray from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/course/tabs/CommentCard.js\";\nimport React from 'react';\nimport { AppBar, Avatar, Button, Icon, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport axiosInstance from 'app/main/axios';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport PostComment from './PostComment';\nexport default function CommentCard(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      commentData = _React$useState2[0],\n      setCommentData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      comment = _React$useState4[0],\n      setComment = _React$useState4[1];\n\n  function replyFetcher() {\n    var promise = axiosInstance.get('class-replies/' + props.item.id + \"/\"); // using .then, create a new promise which extracts the data\n\n    var dataPromise = promise.then(function (response) {\n      return response.data;\n    }); // return it\n\n    return dataPromise;\n  }\n\n  function temp() {\n    replyFetcher().then(function (data) {\n      setCommentData(data);\n      setComment(!comment);\n    });\n  }\n\n  var replyClicked = function replyClicked() {\n    if (comment == 0) temp();else {\n      setComment(!comment);\n    }\n  };\n\n  function plusOne() {\n    console.log(\"hello\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    className: \"px-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: props.item.commenterName[0].toUpperCase(),\n    className: \"mr-16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"inline font-medium\",\n      color: \"initial\",\n      paragraph: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, props.item.commenterName), React.createElement(Typography, {\n      className: \"inline ml-4\",\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, props.item.creationDate)),\n    secondary: props.item.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: plusOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Helloasldkfjasdf\")), React.createElement(AppBar, {\n    className: \"card-footer flex flex-column p-16\",\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: replyClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Replies\"), React.createElement(Icon, {\n    className: \"text-16 ml-4\",\n    color: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"keyboard_arrow_down\"))), React.createElement(Collapse, {\n    in: comment,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(PostComment, {\n    comment: comment,\n    setComment: setComment.bind(this),\n    postId: props.item.classPostId,\n    parentCommentId: props.item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), commentData.length > 0 ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, commentData.map(function (index) {\n    return React.createElement(CommentCard, {\n      item: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  })) : null))));\n}","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/academy/course/tabs/CommentCard.js"],"names":["React","AppBar","Avatar","Button","Icon","List","ListItem","ListItemText","Typography","axiosInstance","Grid","Collapse","PostComment","CommentCard","props","useState","commentData","setCommentData","comment","setComment","replyFetcher","promise","get","item","id","dataPromise","then","response","data","temp","replyClicked","plusOne","console","log","commenterName","toUpperCase","creationDate","body","bind","classPostId","length","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    AppBar,\n    Avatar,\n    Button,\n    Icon,\n    List,\n    ListItem,\n    ListItemText,\n    Typography\n} from '@material-ui/core';\n\nimport axiosInstance from 'app/main/axios';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport PostComment from './PostComment';\n\n\n\nexport default function CommentCard(props)\n{\n    const [commentData, setCommentData] = React.useState([])\n    const [comment, setComment]=React.useState(false);\n\n    function replyFetcher() {\n        const promise = axiosInstance.get('class-replies/' + props.item.id+\"/\");\n        // using .then, create a new promise which extracts the data\n        const dataPromise = promise.then((response) => response.data);\n        // return it\n        return dataPromise;\n      }\n      function temp() \n      {\n          replyFetcher().then(data => {\n          setCommentData(data)\n          setComment(!comment)\n          \n        })\n      }\n    \n      const replyClicked = () => \n      {\n        \n        if (comment == 0)\n          temp();\n        else {\n          setComment(!comment);\n        }\n    \n      };\n\n      function plusOne()\n      {\n        console.log(\"hello\")\n      }\n    return(\n    <div >  \n            <ListItem className=\"px-0\">\n                <Avatar alt={props.item.commenterName[0].toUpperCase()}  className=\"mr-16\"/>\n                    <ListItemText\n                        primary={(\n                                    <div>\n                                        <Typography className=\"inline font-medium\" color=\"initial\" paragraph={false}>\n                                            {props.item.commenterName}\n                                        </Typography>\n                                        <Typography className=\"inline ml-4\" variant=\"caption\">\n                                            {props.item.creationDate}\n                                        </Typography>\n                                    </div>\n                                )}\n                            secondary={props.item.body} \n                        >\n                    </ListItemText>  \n                <Button onClick={plusOne}>\n                           Helloasldkfjasdf\n                </Button>               \n            </ListItem>\n            <AppBar className=\"card-footer flex flex-column p-16\" position=\"static\" color=\"default\" elevation={0}>\n                    <div className=\"flex items-center\">\n                        <Button onClick={replyClicked}>\n                            <Typography>Replies</Typography>\n                            <Icon className=\"text-16 ml-4\" color=\"action\">keyboard_arrow_down</Icon>\n                        </Button>\n                    </div>\n                \n                    <Collapse in={comment} timeout=\"auto\" unmountOnExit>\n                        <Grid >\n                            <PostComment comment={comment} setComment={setComment.bind(this)} postId={props.item.classPostId} parentCommentId={props.item.id} />\n                            {commentData.length > 0 ?  <List >{commentData.map((index)=> (<CommentCard item = {index}  />))}</List>:null}\n                        </Grid>\n                    </Collapse>\n            </AppBar> \n            \n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}