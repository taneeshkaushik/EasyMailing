{"ast":null,"code":"import _objectSpread from \"/home/taneesh/Projects/EasyMailing/material-kit-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport history from '@history';\nimport { setDefaultSettings, setInitialSettings } from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport jwtService from 'app/services/jwtService';\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n/**\n * Set User Data\n */\n\nexport function setUserData(user) {\n  return function (dispatch) {\n    /*\n    Set User Settings\n     */\n    // dispatch(setDefaultSettings(user.data.settings));\n\n    /*\n    Set User Data\n     */\n    dispatch({\n      type: SET_USER_DATA,\n      payload: user\n    });\n  };\n}\n/**\n * Update User Settings\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Update User Shortcuts\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    var newUser = _objectSpread({}, user, {\n      data: _objectSpread({}, user.data, {\n        shortcuts: shortcuts\n      })\n    });\n\n    updateUserData(newUser);\n    return dispatch(setUserData(newUser));\n  };\n}\n/**\n * Remove User Data\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\n * Logout\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    if (!user.role || user.role.length === 0) // is guest\n      {\n        return null;\n      } // history.push({\n    //     pathname: '/'\n    // });\n\n\n    Actions.showMessage({\n      message: \"Logged out\"\n    });\n    dispatch(setInitialSettings());\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\n * Update User Data\n */\n\nfunction updateUserData(user) {\n  if (!user.role || user.role.length === 0) // is guest\n    {\n      return;\n    }\n\n  jwtService.updateUserData(user).then(function () {\n    store.dispatch(Actions.showMessage({\n      message: \"User data saved with api\"\n    }));\n  }).catch(function (error) {\n    store.dispatch(Actions.showMessage({\n      message: error.message\n    }));\n  });\n}","map":{"version":3,"sources":["/home/taneesh/Projects/EasyMailing/material-kit-react-master/src/app/auth/store/actions/user.actions.js"],"names":["history","setDefaultSettings","setInitialSettings","_","store","Actions","jwtService","SET_USER_DATA","REMOVE_USER_DATA","USER_LOGGED_OUT","setUserData","user","dispatch","type","payload","updateUserSettings","settings","getState","oldUser","auth","merge","data","updateUserData","updateUserShortcuts","shortcuts","newUser","removeUserData","logoutUser","role","length","showMessage","message","then","catch","error"],"mappings":"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","sourcesContent":["import history from '@history';\nimport {setDefaultSettings, setInitialSettings} from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\n\nimport jwtService from 'app/services/jwtService';\n\nexport const SET_USER_DATA = '[USER] SET DATA';\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\n\n/**\n * Set User Data\n */\nexport function setUserData(user)\n{\n    return (dispatch) => {\n\n        /*\n        Set User Settings\n         */\n        // dispatch(setDefaultSettings(user.data.settings));\n\n        /*\n        Set User Data\n         */\n        dispatch({\n            type   : SET_USER_DATA,\n            payload: user\n        })\n    }\n}\n\n/**\n * Update User Settings\n */\nexport function updateUserSettings(settings)\n{\n    return (dispatch, getState) => {\n        const oldUser = getState().auth.user;\n        const user = _.merge({}, oldUser, {data: {settings}});\n\n        updateUserData(user);\n\n        return dispatch(setUserData(user));\n    }\n}\n\n/**\n * Update User Shortcuts\n */\nexport function updateUserShortcuts(shortcuts)\n{\n    return (dispatch, getState) => {\n        const user = getState().auth.user;\n        const newUser = {\n            ...user,\n            data: {\n                ...user.data,\n                shortcuts\n            }\n        };\n\n        updateUserData(newUser);\n\n        return dispatch(setUserData(newUser));\n    }\n}\n\n/**\n * Remove User Data\n */\nexport function removeUserData()\n{\n    return {\n        type: REMOVE_USER_DATA\n    }\n}\n\n/**\n * Logout\n */\nexport function logoutUser()\n{\n\n    return (dispatch, getState) => {\n\n        const user = getState().auth.user;\n\n        if ( !user.role || user.role.length === 0 )// is guest\n        {\n            return null;\n        }\n\n        // history.push({\n        //     pathname: '/'\n        // });\n           \n        Actions.showMessage({message:\"Logged out\"});\n        \n        dispatch(setInitialSettings());\n\n        dispatch({\n            type: USER_LOGGED_OUT\n        })\n    }\n}\n\n/**\n * Update User Data\n */\nfunction updateUserData(user)\n{\n    if ( !user.role || user.role.length === 0 )// is guest\n    {\n        return;\n    }\n    jwtService.updateUserData(user)\n        .then(() => {\n            store.dispatch(Actions.showMessage({message: \"User data saved with api\"}));\n        })\n        .catch(error => {\n            store.dispatch(Actions.showMessage({message: error.message}));\n        });\n}\n"]},"metadata":{},"sourceType":"module"}