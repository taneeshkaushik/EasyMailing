{"ast":null,"code":"import _regeneratorRuntime from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport axios from 'axios';\nimport FuseUtils from '@fuse/FuseUtils';\nimport history from '@history';\nimport * as Actions from 'app/store/actions';\nimport { useDispatch } from 'react-redux';\n\nvar jwtService =\n/*#__PURE__*/\nfunction (_FuseUtils$EventEmitt) {\n  _inherits(jwtService, _FuseUtils$EventEmitt);\n\n  function jwtService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, jwtService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(jwtService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.baseURL = 'http://127.0.0.1:8000/api/';\n    _this.axiosInstance = axios.create({\n      baseURL: _this.baseURL,\n      timeout: 5000,\n      headers: {\n        Authorization: window.localStorage.getItem('access_token') ? 'Bearer ' + window.localStorage.getItem('access_token') : null,\n        'Content-Type': 'application/json',\n        accept: 'application/json'\n      }\n    });\n\n    _this.setInterceptors = function (baseURL) {\n      _this.axiosInstance.interceptors.response.use(function (response) {\n        return response;\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(error) {\n          var _this2 = this;\n\n          var originalRequest, refreshToken, tokenParts, now;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(error == undefined)) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  alert('error undefined');\n                  return _context.abrupt(\"return\", Promise.reject(error));\n\n                case 3:\n                  originalRequest = error.config;\n\n                  if (!(typeof error.response === 'undefined')) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n                  return _context.abrupt(\"return\", Promise.reject(error));\n\n                case 7:\n                  if (!(error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/')) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  window.location.href = '/login/';\n                  return _context.abrupt(\"return\", Promise.reject(error));\n\n                case 10:\n                  if (!(error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized')) {\n                    _context.next = 26;\n                    break;\n                  }\n\n                  refreshToken = window.localStorage.getItem('refresh_token');\n\n                  if (!refreshToken) {\n                    _context.next = 24;\n                    break;\n                  }\n\n                  tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n                  now = Math.ceil(Date.now() / 1000);\n                  console.log(tokenParts.exp);\n\n                  if (!(tokenParts.exp > now)) {\n                    _context.next = 20;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", this.axiosInstance.post('/token/refresh/', {\n                    refresh: refreshToken\n                  }).then(function (response) {\n                    window.localStorage.setItem('access_token', response.data.access);\n                    window.localStorage.setItem('refresh_token', response.data.refresh);\n                    _this2.axiosInstance.defaults.headers['Authorization'] = 'Bearer ' + response.data.access;\n                    originalRequest.headers['Authorization'] = 'Bearer ' + response.data.access;\n                    return _this2.axiosInstance(originalRequest);\n                  }).catch(function (err) {\n                    console.log(err);\n                  }));\n\n                case 20:\n                  console.log('Refresh token is expired', tokenParts.exp, now);\n                  window.location.href = '/login/';\n\n                case 22:\n                  _context.next = 26;\n                  break;\n\n                case 24:\n                  console.log('Refresh token not available.');\n                  window.location.href = '/login/';\n\n                case 26:\n                  return _context.abrupt(\"return\", Promise.reject(error));\n\n                case 27:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.handleAuthentication = function () {\n      var access = _this.getAccessToken();\n\n      var refresh = _this.getRefreshToken();\n\n      if (!access) {\n        return;\n      }\n\n      if (!refresh) {\n        return;\n      }\n\n      if (_this.isAuthTokenValid()) {\n        _this.setSession(access, refresh);\n\n        _this.emit('onAutoLogin', true);\n      } else {\n        _this.setSession(null, null);\n\n        _this.emit('onAutoLogout', 'access expired');\n      }\n    };\n\n    _this.createUser = function (data) {\n      Actions.showMessage({\n        message: \"Registering\"\n      });\n      return new Promise(function (resolve, reject) {\n        _this.axiosInstance.post('/create/', data).then(function (response) {\n          if (response.data.id) {\n            history.push('/example');\n            Actions.showMessage({\n              message: \"Registration Successfull\"\n            });\n            resolve(response.data.id);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.signInWithEmailAndPassword =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_username, _password) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(_username);\n                data = _this.axiosInstance.post('/token/', {\n                  username: _username,\n                  password: _password\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2(response) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!response.data.access) {\n                              _context2.next = 3;\n                              break;\n                            }\n\n                            _this.setSession(response.data.access, response.data.refresh); // resolve(response.data.access);\n\n\n                            return _context2.abrupt(\"return\");\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(temp) {\n                    var response;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return _this.axiosInstance.get('/basic-user-info/', {\n                              headers: {\n                                Authorization: 'Bearer ' + window.localStorage.getItem('access_token'),\n                                'Content-Type': 'application/json',\n                                accept: 'application/json'\n                              }\n                            });\n\n                          case 2:\n                            response = _context3.sent;\n                            _context3.t0 = console;\n                            _context3.next = 6;\n                            return response.data;\n\n                          case 6:\n                            _context3.t1 = _context3.sent;\n\n                            _context3.t0.log.call(_context3.t0, _context3.t1);\n\n                            _context3.next = 10;\n                            return response.data;\n\n                          case 10:\n                            return _context3.abrupt(\"return\", _context3.sent);\n\n                          case 11:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x5) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n                _context4.next = 4;\n                return data;\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.signInWithToken = function () {\n      if (_this.isAuthTokenValid()) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.updateUserData = function (user) {\n      return _this.axiosInstance.post('/api/auth/user/update', {\n        user: user\n      });\n    };\n\n    _this.setSession = function (access, refresh) {\n      if (access != undefined) {\n        // console.log('hello');\n        window.localStorage.setItem('access_token', access);\n        window.localStorage.setItem('refresh_token', refresh);\n        _this.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + access;\n      }\n    };\n\n    _this.logout_new = function () {\n      window.localStorage.removeItem('access_token');\n      window.localStorage.removeItem('refresh_token');\n    };\n\n    _this.isAuthTokenValid = function () {\n      var access = _this.getAccessToken();\n\n      if (!access) {\n        return false;\n      }\n\n      var promise = _this.axiosInstance.post('/token/verify/', {\n        token: access\n      }); // using .then, create a new promise which extracts the data\n\n\n      var dataPromise = promise.then(function (response) {\n        return response.data;\n      }); // return it\n\n      if (dataPromise.code == undefined) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.getAccessToken = function () {\n      return window.localStorage.getItem('access_token');\n    };\n\n    _this.getRefreshToken = function () {\n      return window.localStorage.getItem('refresh_token');\n    };\n\n    return _this;\n  }\n\n  _createClass(jwtService, [{\n    key: \"init\",\n    value: function init() {\n      this.setInterceptors(this.baseURL);\n      this.handleAuthentication();\n    }\n  }]);\n\n  return jwtService;\n}(FuseUtils.EventEmitter);\n\nvar instance = new jwtService();\nexport default instance;","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/services/jwtService/jwtService.js"],"names":["axios","FuseUtils","history","Actions","useDispatch","jwtService","baseURL","axiosInstance","create","timeout","headers","Authorization","window","localStorage","getItem","accept","setInterceptors","interceptors","response","use","error","undefined","alert","Promise","reject","originalRequest","config","status","url","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err","handleAuthentication","getAccessToken","getRefreshToken","isAuthTokenValid","setSession","emit","createUser","showMessage","message","resolve","id","push","signInWithEmailAndPassword","_username","_password","username","password","temp","get","signInWithToken","updateUserData","user","common","logout_new","removeItem","promise","token","dataPromise","EventEmitter","instance"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport FuseUtils from '@fuse/FuseUtils';\nimport history from '@history';\nimport * as Actions from 'app/store/actions';\nimport { useDispatch } from 'react-redux';\n\nclass jwtService extends FuseUtils.EventEmitter {\n    baseURL = 'http://127.0.0.1:8000/api/';\n    axiosInstance = axios.create({\n\n        baseURL: this.baseURL,\n        timeout: 5000,\n        headers: {\n            Authorization: window.localStorage.getItem('access_token') ?\n                'Bearer ' + window.localStorage.getItem('access_token') :\n                null,\n            'Content-Type': 'application/json',\n            accept: 'application/json',\n        },\n    });\n    init() {\n        this.setInterceptors(this.baseURL);\n        this.handleAuthentication();\n    }\n\n    setInterceptors = (baseURL) => {\n        this.axiosInstance.interceptors.response.use(\n            (response) => {\n                return response;\n            },\n            async function (error) {\n                if (error == undefined) {\n                    alert('error undefined');\n                    return Promise.reject(error);\n                }\n                const originalRequest = error.config;\n\n                if (typeof error.response === 'undefined') {\n                    alert(\n                        'A server/network error occurred. ' +\n                        'Looks like CORS might be the problem. ' +\n                        'Sorry about this - we will get it fixed shortly.'\n                    );\n                    return Promise.reject(error);\n                }\n\n                if (\n                    error.response.status === 401 &&\n                    originalRequest.url === baseURL + 'token/refresh/') {\n                    window.location.href = '/login/';\n                    return Promise.reject(error);\n                }\n\n                if (\n                    error.response.data.code === 'token_not_valid' &&\n                    error.response.status === 401 &&\n                    error.response.statusText === 'Unauthorized'\n                ) {\n                    const refreshToken = window.localStorage.getItem('refresh_token');\n\n                    if (refreshToken) {\n                        const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n                        // exp date in token is expressed in seconds, while now() returns milliseconds:\n                        const now = Math.ceil(Date.now() / 1000);\n                        console.log(tokenParts.exp);\n\n                        if (tokenParts.exp > now) {\n                            return this.axiosInstance\n                                .post('/token/refresh/', {\n                                    refresh: refreshToken\n                                })\n                                .then((response) => {\n                                    window.localStorage.setItem('access_token', response.data.access);\n                                    window.localStorage.setItem('refresh_token', response.data.refresh);\n\n                                    this.axiosInstance.defaults.headers['Authorization'] =\n                                        'Bearer ' + response.data.access;\n                                    originalRequest.headers['Authorization'] =\n                                        'Bearer ' + response.data.access;\n                                    return this.axiosInstance(originalRequest);\n                                })\n                                .catch((err) => {\n                                    console.log(err);\n                                });\n                        }\n                        else {\n                            console.log('Refresh token is expired', tokenParts.exp, now);\n                            window.location.href = '/login/';\n                        }\n                    }\n                    else {\n                        console.log('Refresh token not available.');\n                        window.location.href = '/login/';\n                    }\n                }\n\n                // specific error handling done elsewhere\n                return Promise.reject(error);\n            }\n        );\n    };\n\n    handleAuthentication = () => {\n\n        let access = this.getAccessToken();\n        let refresh = this.getRefreshToken();\n        if (!access) {\n            return;\n        }\n        if (!refresh) {\n            return;\n        }\n        if (this.isAuthTokenValid()) {\n            this.setSession(access, refresh);\n            this.emit('onAutoLogin', true);\n        } else {\n            this.setSession(null, null);\n            this.emit('onAutoLogout', 'access expired');\n        }\n    };\n\n    createUser = (data) => {\n        Actions.showMessage({\n            message: \"Registering\"\n        });\n        return new Promise((resolve, reject) => {\n            this.axiosInstance.post('/create/', data)\n                .then(response => {\n                    if (response.data.id) {\n\n                        history.push('/example')\n                        Actions.showMessage({\n                            message: \"Registration Successfull\"\n                        });\n\n                        resolve(response.data.id);\n                    } else {\n                        reject(response.data.error);\n                    }\n                });\n        });\n    };\n\n\n    signInWithEmailAndPassword = async (_username, _password) => {\n        console.log(_username);\n        const data =\n            this.axiosInstance.post('/token/', {\n                username: _username,\n                password: _password\n            }).then(async response => {\n                // console.log(response.data.access);\n                if (response.data.access) {\n                    this.setSession(response.data.access, response.data.refresh);\n                    // resolve(response.data.access);\n                    return ;\n                }\n            }).then(async temp => {\n                const response = await this.axiosInstance.get('/basic-user-info/', {\n                    headers: {\n                        Authorization: 'Bearer ' + window.localStorage.getItem('access_token'),\n                        'Content-Type': 'application/json',\n                        accept: 'application/json',\n                    }\n                });\n                console.log(await response.data);\n                return await response.data;\n            });\n        return await data;\n    };\n\n    signInWithToken = () => {\n        if (this.isAuthTokenValid()) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    updateUserData = (user) => {\n        return this.axiosInstance.post('/api/auth/user/update', {\n            user: user\n        });\n    };\n\n    setSession = (access, refresh) => {\n        if (access != undefined) {\n            // console.log('hello');\n            window.localStorage.setItem('access_token', access);\n            window.localStorage.setItem('refresh_token', refresh);\n            this.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + access;\n        }\n    };\n\n    logout_new = () => {\n        window.localStorage.removeItem('access_token');\n        window.localStorage.removeItem('refresh_token');\n    };\n\n    isAuthTokenValid = () => {\n        let access = this.getAccessToken();\n        if (!access) {\n            return false;\n        }\n        const promise = this.axiosInstance.post('/token/verify/', {\n            token: access\n        });\n        // using .then, create a new promise which extracts the data\n        const dataPromise = promise.then((response) => response.data);\n        // return it\n        if (dataPromise.code == undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    getAccessToken = () => {\n        return window.localStorage.getItem('access_token');\n    };\n    getRefreshToken = () => {\n        return window.localStorage.getItem('refresh_token');\n    };\n}\n\nconst instance = new jwtService();\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}