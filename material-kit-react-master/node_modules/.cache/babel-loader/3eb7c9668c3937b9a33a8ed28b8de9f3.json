{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/src/@fuse/components/FuseNavigation/vertical/FuseNavVerticalItem.js\";\nimport React from 'react';\nimport { Icon, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { NavLinkAdapter, FuseUtils } from '@fuse';\nimport { withRouter } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Actions from 'app/store/actions';\nimport FuseNavBadge from './../FuseNavBadge';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    item: {\n      height: 40,\n      width: 'calc(100% - 16px)',\n      borderRadius: '0 20px 20px 0',\n      paddingRight: 12,\n      '&.active': {\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText + '!important',\n        pointerEvents: 'none',\n        transition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n        '& .list-item-text-primary': {\n          color: 'inherit'\n        },\n        '& .list-item-icon': {\n          color: 'inherit'\n        }\n      },\n      '&.square, &.active.square': {\n        width: '100%',\n        borderRadius: '0'\n      },\n      '& .list-item-icon': {},\n      '& .list-item-text': {},\n      color: theme.palette.text.primary,\n      cursor: 'pointer',\n      textDecoration: 'none!important'\n    }\n  };\n});\n\nfunction FuseNavVerticalItem(props) {\n  var dispatch = useDispatch();\n  var userRole = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return auth.user.role;\n  });\n  var classes = useStyles(props);\n  var item = props.item,\n      nestedLevel = props.nestedLevel,\n      active = props.active;\n  var paddingValue = 40 + nestedLevel * 16;\n  var listItemPadding = nestedLevel > 0 ? 'pl-' + (paddingValue > 80 ? 80 : paddingValue) : 'pl-24';\n\n  if (!FuseUtils.hasPermission(item.auth, userRole)) {\n    return null;\n  }\n\n  return React.createElement(ListItem, {\n    button: true,\n    component: NavLinkAdapter,\n    to: item.url,\n    activeClassName: \"active\",\n    className: clsx(classes.item, listItemPadding, 'list-item', active),\n    onClick: function onClick(ev) {\n      return dispatch(Actions.navbarCloseMobile());\n    },\n    exact: item.exact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, item.icon && React.createElement(Icon, {\n    className: \"list-item-icon text-16 flex-shrink-0 mr-16\",\n    color: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, item.icon), React.createElement(ListItemText, {\n    className: \"list-item-text\",\n    primary: item.title,\n    classes: {\n      primary: 'text-14 list-item-text-primary'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), item.badge && React.createElement(FuseNavBadge, {\n    badge: item.badge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nFuseNavVerticalItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string\n  })\n};\nFuseNavVerticalItem.defaultProps = {};\nvar NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\nexport default NavVerticalItem;","map":{"version":3,"sources":["/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/src/@fuse/components/FuseNavigation/vertical/FuseNavVerticalItem.js"],"names":["React","Icon","ListItem","ListItemText","makeStyles","NavLinkAdapter","FuseUtils","withRouter","clsx","PropTypes","useDispatch","useSelector","Actions","FuseNavBadge","useStyles","theme","item","height","width","borderRadius","paddingRight","backgroundColor","palette","secondary","main","color","contrastText","pointerEvents","transition","text","primary","cursor","textDecoration","FuseNavVerticalItem","props","dispatch","userRole","auth","user","role","classes","nestedLevel","active","paddingValue","listItemPadding","hasPermission","url","ev","navbarCloseMobile","exact","icon","title","badge","propTypes","shape","id","string","isRequired","defaultProps","NavVerticalItem","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Icon, ListItem, ListItemText} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/styles';\nimport {NavLinkAdapter, FuseUtils} from '@fuse';\nimport {withRouter} from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector} from 'react-redux';\nimport * as Actions from 'app/store/actions';\nimport FuseNavBadge from './../FuseNavBadge';\n\nconst useStyles = makeStyles(theme => ({\n    item: {\n        height                     : 40,\n        width                      : 'calc(100% - 16px)',\n        borderRadius               : '0 20px 20px 0',\n        paddingRight               : 12,\n        '&.active'                 : {\n            backgroundColor            : theme.palette.secondary.main,\n            color                      : theme.palette.secondary.contrastText + '!important',\n            pointerEvents              : 'none',\n            transition                 : 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n            '& .list-item-text-primary': {\n                color: 'inherit'\n            },\n            '& .list-item-icon'        : {\n                color: 'inherit'\n            }\n        },\n        '&.square, &.active.square': {\n            width       : '100%',\n            borderRadius: '0'\n        },\n        '& .list-item-icon'        : {},\n        '& .list-item-text'        : {},\n        color                      : theme.palette.text.primary,\n        cursor                     : 'pointer',\n        textDecoration             : 'none!important'\n    }\n}));\n\nfunction FuseNavVerticalItem(props)\n{\n    const dispatch = useDispatch();\n    const userRole = useSelector(({auth}) => auth.user.role);\n\n    const classes = useStyles(props);\n    const {item, nestedLevel, active} = props;\n    let paddingValue = 40 + (nestedLevel * 16);\n    const listItemPadding = nestedLevel > 0 ? 'pl-' + (paddingValue > 80 ? 80 : paddingValue) : 'pl-24';\n\n    if ( !FuseUtils.hasPermission(item.auth, userRole) )\n    {\n        return null;\n    }\n\n    return (\n        <ListItem\n            button\n            component={NavLinkAdapter}\n            to={item.url}\n            activeClassName=\"active\"\n            className={clsx(classes.item, listItemPadding, 'list-item', active)}\n            onClick={ev => dispatch(Actions.navbarCloseMobile())}\n            exact={item.exact}\n        >\n            {item.icon && (\n                <Icon className=\"list-item-icon text-16 flex-shrink-0 mr-16\" color=\"action\">{item.icon}</Icon>\n            )}\n            <ListItemText className=\"list-item-text\" primary={item.title} classes={{primary: 'text-14 list-item-text-primary'}}/>\n            {item.badge && (\n                <FuseNavBadge badge={item.badge}/>\n            )}\n        </ListItem>\n    );\n}\n\nFuseNavVerticalItem.propTypes = {\n    item: PropTypes.shape(\n        {\n            id   : PropTypes.string.isRequired,\n            title: PropTypes.string,\n            icon : PropTypes.string,\n            url  : PropTypes.string\n        })\n};\n\nFuseNavVerticalItem.defaultProps = {};\n\nconst NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\n\nexport default NavVerticalItem;\n"]},"metadata":{},"sourceType":"module"}