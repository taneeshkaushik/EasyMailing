{"ast":null,"code":"import * as reduxModule from 'redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createReducer from './reducers';\nimport thunk from 'redux-thunk';\n/*\nFix for Firefox redux dev tools extension\nhttps://github.com/zalmoxisus/redux-devtools-instrument/pull/19#issuecomment-400637274\n */\n\nreduxModule.__DO_NOT_USE__ActionTypes.REPLACE = '@@redux/INIT';\nvar composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nvar enhancer = composeEnhancers(applyMiddleware(thunk));\nvar store = createStore(createReducer(), enhancer);\nstore.asyncReducers = {};\nexport var injectReducer = function injectReducer(key, reducer) {\n  if (store.asyncReducers[key]) {\n    return;\n  }\n\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n  return store;\n};\nexport default store;","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/store/index.js"],"names":["reduxModule","applyMiddleware","compose","createStore","createReducer","thunk","__DO_NOT_USE__ActionTypes","REPLACE","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","asyncReducers","injectReducer","key","reducer","replaceReducer"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,OAA7B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA;;;;;AAIAL,WAAW,CAACM,yBAAZ,CAAsCC,OAAtC,GAAgD,cAAhD;AAEA,IAAMC,gBAAgB,GAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACA,OAAOC,MAAP,KAAkB,QADlB,IAEAA,MAAM,CAACC,oCAFP,GAGID,MAAM,CAACC,oCAAP,CAA4C,CACxC;AADwC,CAA5C,CAHJ,GAKSX,OANb;AAQA,IAAMY,QAAQ,GAAGN,gBAAgB,CAC7BP,eAAe,CAACI,KAAD,CADc,CAAjC;AAIA,IAAMU,KAAK,GAAGZ,WAAW,CAACC,aAAa,EAAd,EAAkBU,QAAlB,CAAzB;AAEAC,KAAK,CAACC,aAAN,GAAsB,EAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAC3C,MAAKJ,KAAK,CAACC,aAAN,CAAoBE,GAApB,CAAL,EACA;AACI;AACH;;AACDH,EAAAA,KAAK,CAACC,aAAN,CAAoBE,GAApB,IAA2BC,OAA3B;AACAJ,EAAAA,KAAK,CAACK,cAAN,CAAqBhB,aAAa,CAACW,KAAK,CAACC,aAAP,CAAlC;AACA,SAAOD,KAAP;AACH,CARM;AAUP,eAAeA,KAAf","sourcesContent":["import * as reduxModule from 'redux';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport createReducer from './reducers';\nimport thunk from 'redux-thunk';\n\n/*\nFix for Firefox redux dev tools extension\nhttps://github.com/zalmoxisus/redux-devtools-instrument/pull/19#issuecomment-400637274\n */\nreduxModule.__DO_NOT_USE__ActionTypes.REPLACE = '@@redux/INIT';\n\nconst composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(thunk)\n);\n\nconst store = createStore(createReducer(), enhancer);\n\nstore.asyncReducers = {};\n\nexport const injectReducer = (key, reducer) => {\n    if ( store.asyncReducers[key] )\n    {\n        return;\n    }\n    store.asyncReducers[key] = reducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n    return store;\n};\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}