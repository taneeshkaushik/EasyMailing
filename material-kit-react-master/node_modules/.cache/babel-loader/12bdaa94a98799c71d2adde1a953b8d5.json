{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\n\nvar InnerReference = function (_React$Component) {\n  _inherits(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, InnerReference);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.refHandler = function (node) {\n      safeInvoke(_this.props.innerRef, node);\n      safeInvoke(_this.props.getReferenceRef, node);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  InnerReference.prototype.render = function render() {\n    warning(this.props.getReferenceRef, '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerContext.Consumer, null, function (_ref) {\n    var getReferenceRef = _ref.getReferenceRef;\n    return React.createElement(InnerReference, _extends({\n      getReferenceRef: getReferenceRef\n    }, props));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}