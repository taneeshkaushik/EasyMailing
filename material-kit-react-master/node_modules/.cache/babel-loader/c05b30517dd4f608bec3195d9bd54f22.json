{"ast":null,"code":"import _regeneratorRuntime from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar baseURL = 'https://serene-fjord-22896.herokuapp.com//api/';\nvar axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n},\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(error) {\n    var originalRequest, refreshToken, tokenParts, now;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            originalRequest = error.config;\n\n            if (!(typeof error.response === 'undefined')) {\n              _context.next = 4;\n              break;\n            }\n\n            alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 4:\n            if (!(error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/')) {\n              _context.next = 7;\n              break;\n            }\n\n            window.location.href = '/login/';\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 7:\n            if (!(error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized')) {\n              _context.next = 23;\n              break;\n            }\n\n            refreshToken = localStorage.getItem('refresh_token');\n\n            if (!refreshToken) {\n              _context.next = 21;\n              break;\n            }\n\n            tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n            now = Math.ceil(Date.now() / 1000);\n            console.log(tokenParts.exp);\n\n            if (!(tokenParts.exp > now)) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", axiosInstance.post('/token/refresh/', {\n              refresh: refreshToken\n            }).then(function (response) {\n              localStorage.setItem('access_token', response.data.access);\n              localStorage.setItem('refresh_token', response.data.refresh);\n              axiosInstance.defaults.headers['Authorization'] = 'Bearer ' + response.data.access;\n              originalRequest.headers['Authorization'] = 'Bearer ' + response.data.access;\n              return axiosInstance(originalRequest);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 17:\n            console.log('Refresh token is expired', tokenParts.exp, now);\n            window.location.href = '/login/';\n\n          case 19:\n            _context.next = 23;\n            break;\n\n          case 21:\n            console.log('Refresh token not available.');\n            window.location.href = '/login/';\n\n          case 23:\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"sources":["/home/abhishek/Projects/stp/frotend/Fuse-React-v3.0.0-skeleton/src/app/main/axios.js"],"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://serene-fjord-22896.herokuapp.com//api/';\n\nconst  axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\ttimeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'Bearer ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n\t\t\talert(\n\t\t\t\t'A server/network error occurred. ' +\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\n\t\t\t);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}