{"ast":null,"code":"import _extends from \"babel-runtime/helpers/extends\";\nimport _classCallCheck from \"babel-runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"babel-runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"babel-runtime/helpers/inherits\";\nimport * as React from \"react\";\nimport createContext from \"create-react-context\";\nexport var ManagerContext = createContext({\n  getReferenceRef: undefined,\n  referenceNode: undefined\n});\n\nvar Manager = function (_React$Component) {\n  _inherits(Manager, _React$Component);\n\n  function Manager() {\n    _classCallCheck(this, Manager);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\n    _this.getReferenceRef = function (referenceNode) {\n      return _this.setState(function (_ref) {\n        var context = _ref.context;\n        return {\n          context: _extends({}, context, {\n            referenceNode: referenceNode\n          })\n        };\n      });\n    };\n\n    _this.state = {\n      context: {\n        getReferenceRef: _this.getReferenceRef,\n        referenceNode: undefined\n      }\n    };\n    return _this;\n  }\n\n  Manager.prototype.render = function render() {\n    return React.createElement(ManagerContext.Provider, {\n      value: this.state.context\n    }, this.props.children);\n  };\n\n  return Manager;\n}(React.Component);\n\nexport default Manager;","map":null,"metadata":{},"sourceType":"module"}