{"ast":null,"code":"import _slicedToArray from \"/home/abhishek/Projects/Stp-II/Fuse-React-v3.0.0-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\nexport default function sort(values) {\n  for (var _len = arguments.length, F = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    F[_key - 1] = arguments[_key];\n  }\n\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n\n  var _F = F,\n      _F2 = _slicedToArray(_F, 1),\n      _F2$ = _F2[0],\n      f = _F2$ === void 0 ? ascending : _F2$;\n\n  if (f.length === 1 || F.length > 1) {\n    var index = Uint32Array.from(values, function (d, i) {\n      return i;\n    });\n\n    if (F.length > 1) {\n      F = F.map(function (f) {\n        return values.map(f);\n      });\n      index.sort(function (i, j) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = F[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _f = _step.value;\n            var c = ascending(_f[i], _f[j]);\n            if (c) return c;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort(function (i, j) {\n        return ascending(f[i], f[j]);\n      });\n    }\n\n    return permute(values, index);\n  }\n\n  return values.sort(f);\n}","map":null,"metadata":{},"sourceType":"module"}